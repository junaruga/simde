---
kind: pipeline
type: docker
name: "clang-9 armv7"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: clang-9
    CXX: clang++-9
    ARCH_FLAGS: -march=armv7a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install clang-9 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "clang-9 armv8"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: clang-9
    CXX: clang++-9
    ARCH_FLAGS: -march=armv8a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install clang-9 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "gcc-8 armv7"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: gcc-8
    CXX: g++-8
    ARCH_FLAGS: -march=armv7-a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install gcc-8 g++-8 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "gcc-8 armv8"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: gcc-8
    CXX: g++-8
    ARCH_FLAGS: -march=armv8-a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install gcc-8 g++-8 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "clang-7 armv7"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: clang-7
    CXX: clang++-7
    ARCH_FLAGS: -march=armv7a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install clang-7 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests
  
---
kind: pipeline
type: docker
name: "clang-7 armv8"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: clang-7
    CXX: clang++-7
    ARCH_FLAGS: -march=armv8a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install clang-7 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "gcc-7 armv7"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: gcc-7
    CXX: g++-7
    ARCH_FLAGS: -march=armv7-a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install gcc-7 g++-7 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

---
kind: pipeline
type: docker
name: "gcc-7 armv8"
platform:
  os: linux
  arch: arm
steps:
- name: test
  image: ubuntu:bionic
  environment:
    CC: gcc-7
    CXX: g++-7
    ARCH_FLAGS: -march=armv8-a -mfpu=neon
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - apt-get -yq update
  - apt-get -yq install gcc-7 g++-7 ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests

# ---
# kind: pipeline
# type: docker
# name: "fedora"
# steps:
# - name: test
#   image: fedora:latest
#   environment:
#     CC: gcc
#     CXX: g++
#     ARCH_FLAGS: -march=native
#   commands:
#   - uname -m
#   - cat /proc/cpuinfo
#   - dnf install -y gcc gcc-c++ ninja-build git-core python3-pip
#   - pip3 install meson
#   - git submodule update --init --recursive
#   - mkdir -p build
#   - cd build
#   - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
#   - ninja -v
#   - ./test/run-tests

---
kind: pipeline
type: docker
name: "fedora clang arm64 flags"
platform:
  os: linux
  arch: arm64
steps:
- name: test
  image: fedora:rawhide
  environment:
    CC: clang
    CXX: clang++
  commands:
  - uname -m
  - cat /proc/cpuinfo
  - dnf install -y clang ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  # optflags RPM macro works with gcc.
  # Some flags and specs are not available with clang.
  # https://lists.fedoraproject.org/archives/list/packaging@lists.fedoraproject.org/message/W5UFLUADNB4VF3OBUBSNAPOQL6XBCP74/
  - ARCH_FLAGS=$(rpm -E "%{optflags}" | sed -e 's| -fstack-clash-protection||' -e 's| -specs=[^ ]*||g')
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests
  failure: ignore

---
kind: pipeline
type: docker
name: "fedora gcc armv7hl flags"
platform:
  os: linux
  arch: arm
steps:
- name: test
  # Use armv7hl image on the Fedora official repository, as there is no Fedora armv7hl image on Docker Hub.
  # https://registry.fedoraproject.org/repo/fedora/tags/
  image: registry.fedoraproject.org/fedora
  environment:
    CC: gcc
    CXX: g++
  commands:
  - uname -m
  - cat /proc/cpuinfo
  # Disable unused RPM modular repository that could cause an error.
  - sed -i '/^enabled=1$/ s/1/0/' /etc/yum.repos.d/*-modular.repo || true
  - dnf install -y clang ninja-build git-core python3-pip
  - pip3 install meson
  - git submodule update --init --recursive
  - mkdir -p build
  - cd build
  - ARCH_FLAGS=$(rpm -E "%{optflags}")
  - CFLAGS="$ARCH_FLAGS" CXXFLAGS="$ARCH_FLAGS" meson ..
  - ninja -v
  - ./test/run-tests
  failure: ignore
