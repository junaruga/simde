language: c
cache: ccache
branches:
  except:
    - /^(wip\/)?(appveyor|msvc|mingw|windows)(\-.+)?$/

addons:
  apt:
    packages:
    - python3-pip
    - python3-setuptools

matrix:
  include:
    - env: C_COMPILER=gcc
    # - env: ARCH=i686 C_COMPILER=gcc-8 CFLAGS=-march=i686
    #   dist: bionic
    # - env:
    #     - ARCH=i686
    #     - C_COMPILER=gcc-8
    #     - CFLAGS='-march=i686 -DSIMDE_NO_SHUFFLE_VECTOR -mno-avx2 -mno-avx -mno-sse4.2 -mno-sse4.1 -mno-ssse3 -mno-sse3'
    #   dist: bionic
    # - env: C_COMPILER=clang
    #   addons:
    #     apt:
    #       packages:
    #       - clang
    #       - python3-pip
    # - env: C_COMPILER=gcc-4.4
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #       - george-edison55-precise-backports
    #       packages:
    #       - gcc-4.4
    #       - g++-4.4
    # - env: C_COMPILER=aarch64-linux-gnu-gcc
    #   addons:
    #     apt:
    #       packages:
    #       - gcc-aarch64-linux-gnu
    #       - g++-aarch64-linux-gnu
    #       - qemu
    # - env: C_COMPILER=clang-3.5
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #       - llvm-toolchain-precise-3.5
    #       - ubuntu-toolchain-r-test
    #       - george-edison55-precise-backports
    #       packages:
    #       - clang-3.5
    # - env: C_COMPILER=pgcc
    # - os: osx

before_install:
- pip3 install meson ninja
###
## If we use the matrix to set CC/CXX Travis overwrites the values,
## so instead we use C/CXX_COMPILER, then copy the values to CC/CXX
## here (after Travis has set CC/CXX).
###
- if [ "${C_COMPILER}" = "pgcc" ]; then
    curl 'https://raw.githubusercontent.com/nemequ/pgi-travis/master/install-pgi.sh' | /bin/sh;
  elif [ "${C_COMPILER}" = "emcc" ]; then
    cd "${HOME}";
    curl -L https://github.com/urho3d/emscripten-sdk/archive/master.tar.gz | tar zx;
    . emscripten-sdk-master/emsdk_env.sh;
    SIMDE_CMAKE_ARGS="-DCMAKE_TOOLCHAIN_FILE=${EMSDK}/emscripten/master/cmake/Modules/Platform/Emscripten.cmake -DDISABLE_X86=yes";
  elif [ "${C_COMPILER}" = "arm-linux-gnueabihf-gcc" ]; then
    SIMDE_CMAKE_ARGS="-DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/test/cmake/toolchain-arm-linux-gnueabihf.cmake";
  elif [ "${C_COMPILER}" = "aarch64-linux-gnu-gcc" ]; then
    SIMDE_CMAKE_ARGS="-DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/test/cmake/toolchain-aarch64-linux-gnu.cmake";
  elif [ "${ARCH}" = "i686" ]; then
    sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt install -y libc6:i386 libc6-dev:i386 gcc-8:i386 cpp-8:i386 binutils:i386 binutils-i686-linux-gnu:i386 && export GCOV="-x /usr/bin/gcov-8" ;
  fi
- if [ -n "${C_COMPILER}" ]; then export CC="${C_COMPILER}"; fi
- if [ -n "${CXX_COMPILER}" ]; then export CXX="${CXX_COMPILER}"; fi
- mkdir "${TRAVIS_BUILD_DIR}/test/build"
- cd "${TRAVIS_BUILD_DIR}/test/build"

script:
- if [ -n "${C_COMPILER}" ]; then export CC="${C_COMPILER}"; fi
- if [ -n "${CXX_COMPILER}" ]; then export CC="${CXX_COMPILER}"; fi
- cat /proc/cpuinfo || true
- meson .. -Db_coverage=true
- make VERBOSE=1
- if [ "${C_COMPILER}" = "arm-linux-gnueabihf-gcc" ]; then
    qemu-arm ./run-tests;
  elif [ "${C_COMPILER}" = "aarch64-linux-gnu-gcc" ]; then
    qemu-aarch64 ./run-tests;
  else
    ./run-tests ;
  fi
- meson coverage

after_success:
- bash <(curl -s https://codecov.io/bash) -f '!test/*'
